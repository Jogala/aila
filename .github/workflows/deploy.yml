# name: Deploy to Railway

# on:
#   push:
#     branches: [main]
#   pull_request:
#     branches: [main]

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.12'

#       - name: Install Poetry
#         uses: snok/install-poetry@v1
#         with:
#           version: latest
#           virtualenvs-create: true
#           virtualenvs-in-project: true

#       - name: Load cached venv
#         id: cached-poetry-dependencies
#         uses: actions/cache@v3
#         with:
#           path: .venv
#           key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

#       - name: Install dependencies
#         if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
#         run: poetry install --with api

#       - name: Run tests (if they exist)
#         run: |
#           if [ -f "pytest.ini" ] || [ -d "tests" ]; then
#             poetry run pytest
#           else
#             echo "No tests found, skipping test step"
#           fi

#       - name: Lint with ruff
#         run: poetry run ruff check .

#       - name: Deploy to Railway
#         if: github.ref == 'refs/heads/main' && github.event_name == 'push'
#         uses: railway-app/railway-deploy@v3
#         with:
#           railway_token: ${{ secrets.RAILWAY_TOKEN }}
#           service: ${{ secrets.RAILWAY_SERVICE_ID }}
#         env:
#           # Environment variables for the deployed app
#           AILA_OPENAI_API_KEY: ${{ secrets.AILA_OPENAI_API_KEY }}
#           AILA_ANTHROPIC_API_KEY: ${{ secrets.AILA_ANTHROPIC_API_KEY }}
#           ENVIRONMENT: production